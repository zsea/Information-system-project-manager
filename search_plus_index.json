{"./":{"url":"./","title":"介绍","keywords":"","body":"介绍 本书为《信息系统项目管理师》的学习笔记，着重在提升自己记忆。 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:35:25 "},"Computer-knowledge/":{"url":"Computer-knowledge/","title":"计算机知识","keywords":"","body":"计算机知识 本部分主要介绍计算机相关知识。 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Computer-knowledge/Information-system-development-foundation/":{"url":"Computer-knowledge/Information-system-development-foundation/","title":"信息系统开发基础","keywords":"","body":"信息系统开发基础 信息：消除不确定性的东西。 数据： 信息系统：输入数据，通过加工处理，产生信息的系统。 信息系统特性：开放性、脆弱性、健壮性（鲁棒性） Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Computer-knowledge/Information-system-development-foundation/Information-system-construction.html":{"url":"Computer-knowledge/Information-system-development-foundation/Information-system-construction.html","title":"信息系统建设","keywords":"","body":"信息系统建设 信息系统的类型 信息系统可以按照应用层次和数据环境来进行分类。 按应用层次分类 分类 使用者 举例 战略级 企业最高管理层 决策系统、商业智能系统 战术级 企业中层经理及其管理部门 客户关系系统 操作级 服务型企业的业务部门 订单录入、课程管理 事务级 企业的管理业务人员 单据审批 按数据环境分类 数据文件 应用数据库 主题数据库 信息检索系统 大型信息系统 特点：规模庞大、跨地域性、网络结构复杂、业务种类繁多、数据量大、用户量大 大型信息系统的特点是大，可从6个维度来理解：规模、地域、网络、业务、数据量、用户量。 信息系统规划 流程 分析企业信息化现状 制定企业信息化战略 信息系统规划方案拟定和总体架构设计(即信息系统规划的输出)。 企业信息化的三个阶段 以数据为核心 以系统为核心 以集成为核心 方法 BSP(Business System Planning) graph TB; A(项目确定) --> B(准备工作) B --> C(定义企业过程) C --> D(识别定义数据) D --> E(分析现有系统) E --> F(确定管理部门对系统的要求) F --> G(提出判断和结论) G --> H(评价信息资源管理工作) G --> I(定义信息系统总体结构) I --> J(确定优先顺序) H --> K(制订建议书和开发计划) K --> L(成果报告) J --> K 工具 P/O矩阵 表示过程(Process)和组织(Organization)的关系，主要用在定义企业过程。 √表示负责，*表示涉及，+也表示涉及 R/D矩阵 表示资源(Resoure)和数据(Data)的关系，是一个定义数据的工具。 可用于归纳数据。 C/U矩阵 表示创建(Create)与使用(Use)的关系，过程与数据的关系。 原则 支持企业战略目标 着眼高层、兼顾中层、满足各业务层 整体性和一致性 适应于组织架构管理体制 便于实施 信息系统生命周期 立项阶段 开发阶段 总体规划------>可能性、可行性。产出：任务书 系统分析------>做什么。产出：逻辑模型、系统说明书 系统设计------>怎么做。产出：物理模型、概要设计、详细设计 系统实施------>做。开发、测试、调试、采购等 系统验收 运维阶段 消亡阶段 信息系统开发方法 描述 优点 缺点 结构化法 用户至上严格区分工作阶段，每阶段有成果强调系统开发过程的整体性和全局性系统开发过程工程化，文档资料标准化自顶向下，逐步分解（求精），模块化 开发目标清晰化开发工作阶段化开发文档规范化设计方法结构化 开发周期长系统难以适应需求环境的变化很少考虑数据结构 原型法 适用于需求不明确的开发抛弃型、进化型周期短、速度快、风险成本低、以用户为中心、用户参与全过程 需求表示清楚，用户满意度高降低开始风险和开发成本 不适用于大型的系统、技术层面远大于分析层面的系统系统难于维护如果用户合作不好，盲目纠缠，会拖延开发进度 面向对象方法 更好的复用性关键在于建立一个全面、合理、统一的模型分析、设计、实现三个阶段，界限不明确 分析、设计中的对象与软件中的对象一致性实现软件复用、简化程序设计系统易于维护、缩短开发周期 需要一定的软件环境支持不适用于大型的MIS系统开发，若缺乏整体系统设计划分，易造成系统结构不合理、各部分关系失调等问题初学者不易接受、难学 面向服务方法 快速响应需求和环境的变化组织内部、组织之间各种应用系统的相互通信和互操作性提高系统可复用性、信息资源共享和系统间互操作性 快速响应需求和环境变化提高系统可复用性、资源共享和系统间互操作性 SO方法是一个较新的领域，许多研究和实践还有待进一步深入 结构化法：主要强调规范、标准、阶段、模块，规范和标准导致难以适应需求和环境变化。 原型法：强调用户参与，快速产出用户能看得见、能操作的软件或界面，若系统太复杂，则很难达到此要求。同时，要求与用户合作良好。 面向对象：万事万物皆对象。分析、设计中的对象与软件开发中的对象基本一致，导致三者连界限不清晰。实现复用、易维护、周期短。 面向服务：一种新型的方法，强制系统间相互通信和操作性（可以是组织内部或组织间的系统）。提高复用、快速适应变化。 个人理解：面向服务在软件中使用第三方服务，专业的事由专业的人来做，若有变化，系统可以快速由专业的人来调整。比如系统调用第三方接口，若接口底层的数据有所变化，由第三方进行维护，对于系统开发不需要做任何调整即可适应环境变化。 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-10 15:12:02 "},"Computer-knowledge/Information-system-development-foundation/Software-engineering.html":{"url":"Computer-knowledge/Information-system-development-foundation/Software-engineering.html","title":"软件工程","keywords":"","body":"软件工程 软件开发模型 瀑布模型 适用范围：项目需求明确，充分了解可交付的产品。 多用于结构化方法 V模型 V模型来源于瀑布模型，强调每一个阶段都有测试。在考试中经常会考在某个阶段所对应的测试类型。 助记：扁担（编码---单元测试）、吉祥（详细设计---集成测试）、膝盖（概要设计---系统测试） 图中功能测试==集成测试 喷泉模型 主要用于面向对象方法。特点：迭代、无间隙 在教程中，图形省略了维护和确认步骤。 用户需求为动力，对象为驱动。 自下而上，周期的各阶段相互迭代和无间隙。 迭代：某个部分常常重复多次，每次迭代中渐近的加入软件成分。 无间隙：各阶段无明显阶段。 如分析和设计间没有界限。 增量模型 一步一步增加软件功能。 增量与迭代的区别： 增量：每一个版本所增加的功能都是规划好的，是按计划增加的。 迭代：后面版本增加的功能没有规划，根据前期反馈进行调整。 螺旋模型 强调风险，适用于庞大、复杂、高风险的项目。 构建组装模型 将模块组成构件，将构件进行组装形成软件。极大的提高了软件开发的复用性，使得软件开发总时长极大减小，使软件的成本降低，可靠性增加。 统一过程 以用例为中心，以架构为驱动进行增量和迭代。 模型将软件工程分为4个阶段： 初始 确定项目范围和边界 识别系统的关键用例 展示系统的候选框架 估计项目费用和时间 评估项目风险 细化 分析系统问题领域 建立软件架构基础 淘汰最高风险元素 构建 开发剩余的构件 构件组装与测试 交付 进行β测试 制作发布版本 用户文档定稿 确认新系统 培训、调整产品 敏捷方法 其中包含：SCRUM、自适应开发、水晶方法、特征驱动开发、极限编程 4大价值观：沟通、简单、反馈、勇气 敏捷主要讲究快，其价值观表现在：有问题就说（沟通、反馈），越简单越快，有想法就做（勇气）。 5大原则：快速反馈、简单性假设、逐步修改、提倡更改、优质工作。 12大最佳实践： 小版本、规划游戏、现场客户 隐喻、简单设计、重构 测试驱动开发、持续集成、结对编程 代码共有、编码标准、每周工作40个小时 敏捷开发宣言 N个体和交互，胜过过程和工具 N可以工作的软件，胜过面面俱到的文档 N客户合作，胜过合同谈判 N响应变化，胜过遵循计划 各种软件开发模型的特点 模型名称 技术特点 适用范围 瀑布模型 简单、分阶段、阶段间存在因果关系，各个阶段完成后都有评审，允许反馈，不支持用户参与，要求预先确定需求。 需求易于完善定义且不易变更的软件系统。 V模型 测试过程作为在需求分析、概要设计、详细设计及编码之后 的一个阶段，等到软件编码完成后才开始测试工作。 时间充裕的系统。 喷泉模型 迭代、无间隙。 面向对象的软件开发。 迭代模型 不要求一性性开发出完整的软件系统，将软件开发视为逐步获取用户需求、完善软件产品的过程。 需求难以确定，不断变更的软件系统。 螺旋模型 结合瀑布模型和迭代模型的思想，并引入了风险分析的活动。 需求难以获取和确定，软件开发风险较大的软件系统。 统一过程 可改造、扩展和裁剪；可以对它进行设计、开发、维护和发布；强调迭代开发。 复杂和需求难以获和确定的软件系统；项目组拥有丰富的软件开发和管理经验。 敏捷方法 拥抱变化、较少的文档、简单的设计；持续集成、小步快走。 小型项目，小型团队，需求快速变化。 软件过程管理 能力成熟度 在软件过程管理方面，最著名的是能力成熟度模型集成(Capability Maturity Model Integration,CMMI)，它融合了多种模型，形成了组织范围内过程改进的单一集成模型，其主要目的是消除不同模型之间的不一致和重复，降低基于模型进行改进的成本。 过程域的阶段式分组 成熟度等级 过程域 初始级 可管理级 需求管理、项目计划、配置管理、项目监督与控制、供应商合同管理、度量和分析、过程和产品质量保证 已定义级 需求开发、技术解决方案、产品集成、验证、确认、组织级过程焦点、组织级过程定义、组织级培训、集成项目管理、风险管理、集成化的项目团队、决策分析和解决方案、组织级集成环境 量化管理级 组织级过程性能、定量项目管理 优化管理级 组织级改革与实施、因果分析和解决方案 初始级 无序、混乱、没有定义、成功取决于个人努力、管理是反应式的。 可管理级 建立了基本的管理过程来跟踪费用、进度和功能特性。制定了必要的过程纪律，能重复早先类似应用项目取得成功的经验。经验可复用。 已定义级 已将软件管理和工程两方面的过程标准化、文档化，并综合成该组织的标准软件过程。所有项目均使用经批准的、裁剪的标准软件过程来开发和维护软件，软件产品的生产在整个软件的过程是可见的。 量化管理级 分析对软件过程和产品质量的详细数据，对软件产品和过程都有定量的理解和控制。管理有一个作出结论的客观依据，管理能够在定量的范围内预测性能。 优化管理级 过程的量化反馈和先进的新思想、新技术促进过程持续不断改进。 连续式模型的过程域分组 连续式分组 过程域 过程管理 组织级过程焦点、组织级过程定义、组织级培训、组织级过程性能、组织级改革与实施 项目管理 项目计划、项目监控与控制、供应商合同管理、集成项目管理、风险管理、集成化的团队、定量项目管理 工程 需求管理、需求开发、技术解决方案、产品集成、验证、确认 支持 配置管理、度量和分析、过程和产品质量保证、决策分析和解决方案、组织级集成环境、因果分析和解决方案 过程改进 帮助软件开发企业对其软件开发过程的改变进行计划、措施制度以及实施。实施对象是企业的软件过程。也包括软件维护之类的维护过程，而对于其它的过程并不关注。 软件开发过程 软件维护过程 实施软件过程改进的最根本利益在于，它能够极大的提高项目成功的概率。 原则 注重问题 强调知识创新 鼓励参与 领导层的统一 计划不断的改进 软件开发方法 逆向工程 发生在软件维护阶段。 graph LR; A[现有系统]==>B(逆向工程) B-->C(考虑新需求) C-->D(正向工程) D==>E[新系统] A-->F((再工程)) F-->E 需求工程 软件需求是指用户对系统在功能、行为、性能、设计约束方面的期望。 需求阶段所使用的工具有：层次方框图、Warnier图、用例图和IPO图。 需求分类 需求的层次 业务需求 高层次的目标 用户需求 用户要求必须能完成的任务 系统需求 功能需求 开发人员必须完成的任务 非功能需求 系统必须具备的属性或品质 软件质量属性 易用性 可维护性 效率 其它非功能需求 设计约束 限制条件或补充规约。如：必须使用国产数据库，必须运行在Unix系统下等。 质量功能部署(QFD) Quality Function Deployment 基本需求 期望需求 兴奋需求 也叫意外需求 需求开发 需求获取 确定和理解不同的项目干系人的需求和约束的过程。 需求分析 检测和解决需求之间的冲突 发现软件的边界，以及软件与其环境如何交互 详细描述系统需求，以导出软件需求 使用SA(Structured Analysis)方法进行需求分析时，以数据字典为核心，建立数据模型、行为模型、功能模型。 数据模型：使用实体联系图（E-R图）表示 功能模型：使用数据流图（Data Flow Diagram,DFD）表示 行为模型：也称状态转换模型，用状态转换图（State Transform Diagram,STD）表示 需求定义 完成《需求规格说明书（SRS）》的编写。 需求规格说明书：Software Requirement Specification 范围 引用文件 需求 合格性规定 需求可追踪性 尚未解决的问题 注解 附录 需求验证 需求评审 需求测试 架构设计 软件架构：描述软件系统的子系统和构件（组件），以及它们之间关系的学科。 架构设计：需求分配。即将满足需求的职责分配到构件上。 架构视图：从某一视角或某一点上看到的系统所做的简化描述，描述中涵盖系统的某一特定方面，而省略了与此方面无关的实体。 4+1视图 逻辑视图：支持系统的功能需求，从最终用户的视角来查看。 开发视图：也称模块视图、实现视图，关注实际的软件开发环境中的模块组织，从开发者角度松查看。 运行视图：也称处理视图。侧重系统的运行特性，关注非功能需求，强调并发性、分布性、系统集成性和容错能力。从系统管理员角度查看。 部署视图：将软件映射到硬件上。考虑系统性能、规模、可靠性等。从系统管理员角度查看。 场景视图：也称用例视图。最重要的需求抽象，上面4个视图通过场景一起无缝工作。 架构风格 反映了领域中从多系统所共有的结构和语义特性，并指导如何将各个构件有效的组织成一个完整的系统。 定义了用于描述系统的术语表和一组指导构件系统的规则。 基于敏感点和权衡点来评估架构风格 评估的方式有： 调查问卷 场景 度量 数据流风格 批处理序列 管道-过滤器 调用/返回风格 主程序/子程序 面向对象 层次结构 独立构件风格 进程通信 事件驱动系统（隐式调用） 虚拟机风格 解释器 基于规则的系统 仓库风格 数据库系统 超文本系统 黑板系统 软件设计 概要设计 详细设计（设计模型、微观） 自顶向下、逐步求精 信息隐蔽 模块独立（高内聚、低耦合） 设计模式 按处理范围分： 类模式（静态模式） 对象模式（动态模式） 类是在开发阶段存在的，对象是类实例化后产生的。对象是在运行时才会实例化，所以是动态模式。 按目的和用途分： 创建型 创建对象 工厂模式 抽象模式 单例模式 原型模式 创建者模式 结构型 处理类或对象组合 适配器模式 桥接模式 组合模式 装饰模式 代理模式 行为型 交互与职责分配 链模式 命令模式 解释器模式 迭代器模式 中介者模式 软件测试 测试原则 尽早、不断的进行测试 程序员避免测试自己设计的程序 既要选择有效、合理的数据，也要选择无效、不合理的数据 修改后应进行回归测试 尚未发现的错误数量与已发现的错误数量成正比 如果有10个测试用例，已经测试了3个用例，发现3个错误，则可以预测剩下的7个用例将发现7个用例。 测试方法 动态测试 黑盒测试---用于功能测试（集成测试） 等价类划分 边界值分析 错误推测 因果图 白盒测试---用于单元测试阶段 语句覆盖 判定覆盖 条件覆盖 判定/条件覆盖 条件组合覆盖 路径覆盖 静态测试 针对文档 检查单 针对代码 桌前检查---开发人员做 代码审查---需求、开发、测试人员来做 代码走查---测试工程师做 测试类型 按照开发阶段划分 单元测试---单元功能、单元接口 集成测试---模块间接口测试、模块间数据传递、全局数据结构测试 确认测试---验证软件功能、性能及其它特性是否与用户需求一致 系统测试---从用户角度对系统功能验证，非功能性验证 验收测试---整个系统的测试与评审，决定是否接受系统的测试与评价 按照测试技术划分 黑盒测试---对功能、界面测试 白盒测试---检查所有的结构及路径是否正确 灰盒测试---关注输出对输入的正确性、关注内部的表现 按照测试实施组织划分 开发方测试---验证测试、Alpha测试 用户测试---beta测试 第三方测试 Alpha测试：开发者在正式环境下的测试 Beta测试：用户在正式环境下的测试。只针对少部分挑选的用户。 性能测试 Performance Test 通常收集所有和测试有关的所有性能，通常被不同的人在不同场合下使用。关注点：how much和how fast 负载测试(Load Test)：指系统在超负荷环境中运行，程序是否能够承担。在一定工作负荷下，给系统造成的负荷及系统的响应时间。关注点：how much 压力测试(Stress Test)：在系统资源特别低的情况下软件系统的运行情况，目的是找到系统在哪里失效以及如何失效的地方。在一定负荷条件下，长时间持续运行系统给系统性能造成的影响。 工具：LoadRunner 平均用户并发数：C=NL/T，N是login session的数量，L是login session平均长度，T是考察的时间断。 并发用户峰值数：C≈3CC\\approx3\\sqrt{C}C≈3√​C​​​ 测试管理 测试团队管理 测试计划管理 错误(缺陷)跟踪管理 测试软件管理 过程管理 测试的过程就是执行用例 配置管理 应将软件的工作产品纳入配置管理 评审 评审的内容包括： 测试计划 测试用例 测试结果 测试过程 测试人员管理 测试的负责人 测试的分析人员 测试的设计人员 测试的测试员 测试的测试管理员 若A、B两人同时进行测试，分别发现a、b个bug，其中共同的bug数为c，则可以预测总bug数为：DN=(a∗b)/cDN=(a*b)/cDN=(a∗b)/c 系统运行与维护 软件维护是生命周期的一个完整活动。可以将软件维护定义为需要提供软件支持的全部活动。包括交付前与交付后完成的活动。 交付前的维护活动：交付后的运行计划和维护计划 交付后的维护活动：修改、培训、帮助资料等 维护的分类 改正性维护 改正错误。修改软件中出现的错误 适应性维护 适应环境。由于软件运行环境变化所引起的维护 完善性维护 完善功能。对功能的增加 预防性维护 为新功能做准备。 软件复用 指利用已有软件的各种有关知识构造新的软件，以缩减软件开和维护的费用。 是提高软件生产力和质量的一种重要技术。 代码的复用 设计的复用 分析的复用 测试信息的复用 软件开发环境 建模工具 Rational Rose 设计工具 Power Designer,ERWin 开发工具 Visual Stdio.NET,Eclipse 测试工具 LoadRunner 项目管理工具 Project,Clearcase,VSS,CVS Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-10 15:12:02 "},"Computer-knowledge/Information-system-development-foundation/Object-oriented-technology.html":{"url":"Computer-knowledge/Information-system-development-foundation/Object-oriented-technology.html","title":"面向对象技术","keywords":"","body":"面向对象技术 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Computer-knowledge/Information-and-System-Integration-Technology.html":{"url":"Computer-knowledge/Information-and-System-Integration-Technology.html","title":"信息化与系统集成技术","keywords":"","body":"信息化与系统集成技术 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Computer-knowledge/Computer-network-foundation.html":{"url":"Computer-knowledge/Computer-network-foundation.html","title":"计算机网络基础","keywords":"","body":"计算机网络基础 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Computer-knowledge/Information-system-security-management.html":{"url":"Computer-knowledge/Information-system-security-management.html","title":"信息系统安全管理","keywords":"","body":"信息系统安全管理 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Computer-knowledge/Intellectual-property-and-standardization-knowledge.html":{"url":"Computer-knowledge/Intellectual-property-and-standardization-knowledge.html","title":"知识产权与标准化知识","keywords":"","body":"知识产权与标准化知识 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Computer-knowledge/Information-system-service-management.html":{"url":"Computer-knowledge/Information-system-service-management.html","title":"信息系统服务管理","keywords":"","body":"信息系统服务管理 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Project-management-knowledge/":{"url":"Project-management-knowledge/","title":"项目管理知识","keywords":"","body":"项目管理知识 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Project-management-knowledge/Basic-knowledge.html":{"url":"Project-management-knowledge/Basic-knowledge.html","title":"项目管理基础知识","keywords":"","body":"项目管理基础知识 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 09:33:40 "},"Project-management-knowledge/scope.html":{"url":"Project-management-knowledge/scope.html","title":"范围管理","keywords":"","body":"项目范围管理 Project Scope Management 产品范围：表示产品或服务的特性和功能。如何确定信息系统的范围在软件工程中被称为需求收集。 项目范围：为了完成所规定特征和功能的产品或服务必须完成的工作。 项目范围为生产出适合范围的产品所必须完成的工作。 如果把馒头看成一个产品，则馒头的范围就包括：颜色、形状、大小等。生产馒头就是一个项目，其范围就是生产出满足要求的馒头所必须做的工作：买面粉、和水等。 项目范围基准：范围说明书+WBS+WBS词典 项目范围管理不仅仅是让项目管理和施工人员知道为达到预期目标需要完成的工作，还确认清楚各相关方在项目中的分工界面和职责。 范围管理的过程 过程 英文名称 解释 规划范围管理 Plan Scope Management 创建范围管理计划，书面描述将如何定义、确认、控制项目范围的过程 收集需求 Collect Requirements 为实现项目目标而确定、记录并管理干系人的需要和需求的过程 定义范围 Define Scope 制定项目和产品详细描述的过程 创建WBS Create WBS 将项目可交付成果和项目工作分解为较小的、易于管理的组件的过程 确认范围 Validate Scope 正式验收项目已完成的可交付成果的过程 控制范围 Control Scope 监督项目和产品的范围状态，管理范围基准变更的过程 规划范围管理 在整个项目中对如何管理项目范围提供方向和指南。 输入：项目管理计划、项目章程、事业环境因素、组织过程资产 工具和方法：专家判断(Expert Judgment)、会议 输出：范围管理计划、需求管理计划 该过程主要目的是定义后面的过程应该怎么做，输出的都是计划 收集需求 为定义和管理项目范围（包括产品范围）奠定基础 输入：范围管理计划、需求管理计划、项目章程、干系人管理计划、干系人登记册 工具和方法：访谈、焦点小组、引导式研讨会、群体创新技术、群体决策技术、问卷调查、原型法、观察、标杆对照、系统交互图、文件分析 输出：需求文件、需求跟踪矩阵 该过程要干的活就是想尽一切办法从干系人处获得需求，所以输入有干系人管理计划和干系人登记册，由于项目章程里含有高层的目标，项目章程也做为输入，其输出为该过程的原始记录。 范围定义 明确所收集的需求哪些将包含在项目范围之内，哪些将排除在项目范围之外，从而明确产品、服务或成果的边界。 输入：项目章程、范围管理计划、需求文件、组织过程资产 工具：产品分析、备选方案生成、专家判断、引导式研讨会 输出：项目范围说明书、项目文件的更新 从客户（干系人）过来的是需求，需求经过整理后就成了项目的范围。该过程主要做的是和甲方明确项目的范围，以便项目团队能开展后期的工作，并明确不需要做的事情。该过程需要生成一个正式的文档《项目范围说明书》。 项目范围说明书 作用 使项目团队能开展更详细的规划，并在执行过程中指导项目团队的工作 为评价变更请求或额外工作是否超出项目边界提供基准 内容 产品范围 交付成果 验收标准 除外责任 项目范围说明书是对项目范围、主要可交付成果、假设条件和制约因素的描述。它记录了整个范围，包括项目和产品的范围。项目范围说明也表明了干系人之间就项目范围达成的共识，并可明确指出哪些工作不属于项目范围。 创建WBS 对所要交付的内容提供一个结构化的视图。 为了便于管理，对上一步的结果进行分解为更小的组件。 输入：项目范围说明书、范围管理计划、需求文件、事业环境因素、组织过程资产 工具：分解、专家判断 输出：WBS、WBS词典、项目文件更新 WBS+WBS词典+项目范围说明书构成范围基准。 分解原则 100%。做且仅做项目的所有工作，包括分包出去的工作。 完整性。各层次上保持项目的完整性。 单一从属。有且只能有一个上属结构。 单一负责。工作包有且只能有一个负责人。 8/80原则。8小时或80天的工作量。 便于管理和控制的需要。 同性质。相同层次的工作单元拥有相同的性质。 WBS的最低层次的工作单元是工作包。一个项目的WBS是否分解到工作包，要跟项目的阶段、复杂程度和规模有关，一般来说早期、复杂和大规模的项目，其WBS的分解颗粒要大一些、粗一些。 分解步骤 识别和分析可交付成果及相关工作 确定WBS的结构与编排方法 自上而下，逐层细化的分解 为WBS组成部分制定和分配标志编码 核实工作分解的程度是必要且充分的 分解方法 生命周期作为第一层，可交付物作为第二层 可交付物作为第一层 子项目作为第一层 表现形式 树形结构。 清晰、直观、结构性强。不易修改，大的、复杂的项目难以表示全景。中小型项目应用较多。大项目需要再分解为子项目。 列表形式。 能够反映所有工作要素，常用于大型项目。 作用和意义 明确说明项目范围。项目组成员能够清楚的理解任务的性质和需要努力的方向。 清楚定义项目的边界。提供项目干系人一致认可的项目需要做的工作和不需要做的工作。 为各独立单元分派人员，确定这些人员的职责，可以确定完成项目所需要的技术和人力资源。 针对独立单元，进行时间、费用和资源的需要量的估算，提高估算的准确性。 为计划、预算、进度安排和费用控制奠定共同的基础，确定项目进度和控制的基准。 将项目工作和项目的账务账目联系起来。（成本） 确定工作内容和工作顺序，把项目分解为具体的工作任务，就可以按照工作任务的逻辑顺序来实施项目。 估计项目整体和全过程的费用。 有助于防止需求蔓延。 确认范围 使验收过程具有客观性；同时通过验收每个可交付物，提高最终产品、服务或成果验收的可能性。 输入：项目管理计划、需求文件、需求跟踪矩阵、核实的可交付物、工作绩效数据 工具：检查、群体决策技术 输出：验收的可交付成果、变更请求、工作绩效信息、项目文件更新 确认范围的过程中也可能产生范围变更。个人理解在未正式确认范围（验证完成）前，都可能产生范围的变更。 准备材料 能够说明项目或项目阶段成果的文件 项目管理文件 需求说明书 技术文件 竣工图纸 客户已经认可了的这个项目产品或某个阶段的文件 工作要点 制定并执行确认程序 项目干系统人对项目范围的正式承认 让系统的使用者有效参与 项目各阶段的确认与项目最终验收的确认 其它 如果项目在早期被终止，确认范围将记录其完成情况 确认范围应该贯穿项目的始终 项目在每个阶段都有工作完成，其完成情况都应该被确认。 确认范围一般在质量控制之后，但是也可以并行执行。 确认范围关注工作结果的接受度；质量控制关注工作结果的正确性。 范围是必须完成的工作，若未完成，则客户不会接受。质量则关注在当前范围内，事情有没有做正确。 质量控制是在项目团队内部由执行组织进行检查。 可交付物变化 graph TB; A(( ))-->|指导与管理项目工作|B[可交付成果] B-->|质量控制|C[确认的可交付成果] C-->|确认范围|D[验收的可交付成果] D-->|结束项目或阶段|E[\"最终产品、服务或成果移交\"] 控制范围 保持对范围基准的维护。 该过程贯穿项目始终。 输入：项目管理计划、工作绩效数据、需求文件、需求跟踪矩阵、组织过程资产 工具：偏差分析 输出：工作绩效信息、变更请求、项目管理计划更新、项目文件更新、组织过程资产更新 所有过程产生的输出均可做为控制过程的输入，对输入数据处理后产生对应的输出。 涉及内容 影响导致围范变更的因素。 确保所有变更请求按照项目整体变更控制过程处理。 范围变更时管理实际的变更。 控制范围还要与其它控制过程相结合。 焦点问题 对造成范围变更的因素施加影响，以确保这些变更得到一致认可。 确定范围变更是否已经发生。 当范围变更发生时，对实际的变更进行管理。 变更原因 项目的外部环境发生变化 项目范围的计划编制不周密详细，有一定的错误或遗漏 市场上或设计人员提出了新技术、新手段或新方案 项目实施组织本身发生变化 客户对项目、项目产品或服务的要求发生变化 数据流图 graph TB; classDef PROCESS fill:#FFFFDE,stroke:#333,stroke-width:1px; classDef INNER fill:#f9f,stroke:#333,stroke-width:1px; A(项目管理计划) B(项目章程) C(事业环境因素) D(组织过程资产) E[规划范围管理] A-->E B-->E F(范围管理计划) G(需求管理计划) E-->F E-->G H(干系人管理计划) I(干系人登记册) J[收集需求] H-->J I-->J F-->J G-->J K(需求文件) L(需求跟踪矩阵) J-->K J-->L M[范围定义] K-->M N(项目范围说明书) O(项目文件的更新) M-->N P[创建WBS] N-->P Q(WBS) R(WBS词典) P-->Q P-->R S(核实的可交付物) T(工作绩效数据) U[确认范围] S-->U T-->U K-->U L-->U V(验收的可交付物) W(变更请求) X(工作绩效信息) U-->V U-->W U-->X class E,P,M,J,U PROCESS; class A,F,G,K,L,N,Q,R,S,V INNER Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-06 09:21:37 "},"Project-management-knowledge/quality.html":{"url":"Project-management-knowledge/quality.html","title":"质量管理","keywords":"","body":"项目质量管理 Project Quality Management 考点：案例和论文 相关概念 质量：一组固有特性满足需求的程度。需求指明示的、通常隐含的或必须履行的需求或期望。特性指可区分的特征——可以是固有的或赋予的、定性的或定量的、有各种类别的（物理的、感官的、行为的、时间的、功能的等）。 质量管理：在质量方面指挥和控制组织的协调的活动，通常包括制定质量方针和质量目标以及质量策划、质量控制、质量保证和质量改进。 质量方针：由组织的最高管理者正式发布的该组织总的质量宗旨和方向。它体现了该组织（项目）的质量意识和质量追求，是组织内部的行为准则，也体现了顾客的期望和对顾客作出的承诺。质量方针是总方针的一个组成部分，由最高管理者批准和发布。 质量目标：在质量方面所追求的目的。它是落实质量方针的具体的要求，它从属于方针，应与利润目标、成本目标、进度目标相协调。质量目标必须明确、具体、尽量用定量化的语言进行描述，保证质量目标容易被沟通和理解。质量目标应分别落实到各部门及项目的全成成员，以便于实施、检查和考核。 等级：作为设计意图，是对用途相同单技术不同特性不同的可交付成果的级别分类。 项目质量：包括项目的工作质量和项目的产品质量。 相关概念来源来GB/T19000:2000。 流程 确定质量标准体系 对项目实施进行质量控制 将实际与标准对照 纠偏纠错 目标 顾客满意度：理解、管理和影响需求，以便与顾客的期望相符，这就要求即符合要求（项目应该交付所承诺的产品）又适于使用（交付的产品或服务必须满实际需求）。 预防胜于检查：预防缺陷的成本总是大大低于纠正偏差缺陷的成本，也就是说，防患于未然的代价总是小于纠正所发现的错误的代价。 各阶段内的过程：质量管理既重视结果也重视过程——项目管理过程中讲到的阶段和过程与戴明等质量管理专家所描述的质量控制循环PDCA很相似 ISO9000族标准 帮助各种类型和规模的组织实施并运行有效的质量管理体系，增强顾客满意度。 ISO9000:质量管理体系基础知识、质量管理体系基本术语 ISO9001:规定质量管理体系要求，用于组织证实其具有提供满足顾客要求和适用的法规要求的产品的能力，目的在于增进顾客满意。 ISO9002:提供考虑质量管理体系的有效性和效率两方面的指南。该标准的目的是组织业绩改进和顾客及相关方满意。 ISO19011:提供审核质量和环境管理体系指南。 ISO八大基本原则： 以顾客为中心 领导作用 全员参与 过程方法 持续改进 全管理的系统方法 与供方互利的方法 基于事实的决策方法 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-10 17:22:28 "},"Project-management-knowledge/communication.html":{"url":"Project-management-knowledge/communication.html","title":"沟通管理","keywords":"","body":"项目沟通管理 Project Communication Managentment 考点：论文、案例分析 项目沟通管理包括为确保项目信息及时恰当的规划、收集、生成、发布、存储、检索、管理、控制、监督和最终处置所需的各个过程。 项目经理决大多数时间（90%以上）都用于团队成员和其它干系人的沟通 沟通管理的过程 过程 英文名称 解释 规划沟通管理 Plan Communications Managentment 根据干系人的项目信息需要和需求及组织的可用资产情况，制定合适的项目沟通方式和计划的过程 管理沟通 Managentment Communications 根据沟通管理计划，生成、收集、分发、存储、检索及最终处置项目信息的过程 控制沟通 Control Communications 在整个项目生命周期中对沟通进行监督和控制，以满足干系人对项目信息的需求的过程 规划沟通管理 识别与记录与干系人最有效率且最有效果的沟通方式。 输入：干系人登记册、项目管理计划、事业环境因素、组织过程资产 工具：沟通需求分析、淘通技术、沟通模型、沟通方法、会议 输出：沟通管理计划、项目文件的更新 影响沟通技术的因素 对信息需求的紧迫性 技术是否到位 预期的项目人员配备 项目的持续时间 项目环境 沟通的模型 在信息的传递过程中，都会存在噪声的干扰 graph RL; subgraph 发送方 SEN(编码) SDE(解码) end subgraph 接收方 RDE(解码) REN(编码) end SEN-->|传递信息|RDE REN-->|反馈信息|SDE RDE-->|告之收悉|SEN 沟通的渠道 指信息源选择和确立的传送信息的媒价物，也就是指信息传播者传递信息的途径。 渠道数计算公式公式：CC=n*(n-1)/2 n为人的数量 沟通的障碍 可能出现在案例题中，让分析沟通中存在的问题 缺乏清晰的沟通渠道 发送者与接收者存在物理距离 沟通双方彼此技术语言不通 分散注意力的环境因素（噪声） 有害的态度 敌对 不信任 权力游戏、滞留信息、隐藏方程与敌对情绪等 此为普通理解的刁难，由信息的掌握一方故意不进行沟通 沟通的方式 推式：电子邮件 信息发布者主动 拉式：网站 信息接收者主动 交互式：QQ、微信等及时通信工具 制定沟通管理计划的步骤 确定干系人的沟通信息需求。 哪些人需要沟通 谁需要什么信息 什么时候需要信息 信息发送方式 描述信息收集和文件归档的结构。 确定发送信息和重复信息的格式。 沟通管理计划的内容 项目干系人的沟通要求 需要沟通的信息 语言 格式 内容 详细程度 发布信息的原因 发布信息及告之收悉或作出回应的时限和频率 负责沟通相关信息的人员 负责授权保密信息发布的人员 将要接收信息的个人或小组 传递信息的技术或方法 备忘录 电子邮件 新闻稿 为沟通活动分配的资源 时间 预算 通于术语表 沟通制约因素 法律法规 技术要求 组织政策 沟通管理计划对所要沟通的内容进行了计划（规定），即干系人要求沟通什么，沟通的信息需要怎么组织起来（格式、语言、内容、详细程度），什么样的信息因为什么样的原因需要发布，普通信息由谁来发布，保密信息需要谁来审核才能发布，什么样的信息需要发给什么样的人，使用什么样的方法来把信息发给接收者（邮件、QQ、备忘录...），在沟通上能够使用的资源（包括时间和预算，即电话可以打多长，可以花多少钱来打电话），制约因素可理解为在沟通的时候必须要满足的要求，比如保密信息只能不能通过互联网传输等。 管理沟通 促进干系人之间实现有效率且有效果的沟通。 输入：沟通管理计划、工作绩效报告、事业环境因素、组织过程资产 工具：信息管理系统、报告绩效、沟通模型、沟通技术、沟通方法 输出：项目沟通、项目管理计划更新、项目文件更新、组织过程资产更新 信息管理系统 信息管理系统是管理沟通的一个工具，其管理的内容包括： 纸质文件。信件、备忘录、报告和新闻稿。 电子通信管理。电子邮件、传真、语音信箱、电话、视频和网络会议、网站和网络出版等。 项目管理电子工具。其于网页界面的进度管理工具和项目管理软件、会议和虚拟办公支持软件、门户网站和协同工作管理工具。 报告绩效 收集和发布绩效信息。包括状况报告、进展测量结果及预测结果。 报告绩效是个动作。 绩效报告 向每个受众适度的提供信息。可定期编制或基于特殊情况编制。 绩效报告是一个名词。绩效报告里包含了信息。 对收集的信息进行组织与归纳，并通过与绩效测量基准的比较，来分析和展示绩效。应按照沟通管理计划的规定，以各干系人所要求的详细程度，向他们提供项目状态和进展信息。 预测的项目完工时间和成本，应该根据工作绩效测量结果来更新并重新发布预测。 控制沟通 随时确保所有沟通参与者之间信息流动的最优化。 输入：项目沟通、问题日志、项目管理计划、工作绩效数据、组织过程资产 工具：信息管理系统、专家判断、会议 输出：工作绩效信息、变更请求、项目管理计划更新、项目文件更新、组织过程资产更新 关注的特性 持续性。 控制沟通的过程中，可能引发重新制订沟通管理计划或管理沟通过程。 特殊性。 对某些特定信息的沟通（问题或关键绩效指标：实际成本、进度、质量与计划要求的比较结果），可能立即引发修正措施。 正确性。 应仔细的评估和控制项目沟通的影响和对影响的反应，确定正确的时间把正确的信息以正确的方式传递给正确的受众。 如何改进项目沟通 本节知识点可用于案例和论文题。 沟通的基本原则 沟通的内外有别 非正式的沟通有助于关系的融洽。 私下的讨论 采用对方能接受的沟通风格 沟通的升级原则 不要越级反应问题 扫除沟通的障碍 人际沟通风格 理性型 实践型 亲和型 理想型 改进方法 使用信息管理系统 建立沟通基础设施 使用项目沟通模板 把握项目沟通基本原则 发展更好的沟通技能 把握人际沟通风格 进行良好的冲突管理 召开高效的会议 高效的会议 事先制订一个例会制度 放弃可开可不开的会议 明确会议的目的和期望结果 发布会议通知 在会议前将会议资料发给参会人员 可以借助视频设备 明确会议规则 会议要有记录 会后要有总结，提炼结论 项目例会 是内部沟通主要平台 以周为单位 由项目经理主持 主要议题 项目进展程度调查和汇报 项目问题的解决 项目潜在风险的评估 项目团队人力资源的协调 数据流图 graph TB; classDef PROCESS fill:#FFFFDE,stroke:#333,stroke-width:1px; classDef INNER fill:#f9f,stroke:#333,stroke-width:1px; A(干系人登记册) B(项目管理计划) C(事业环境因素) D(组织过程资产) E[规划沟通管理] A-->E B-->E C-->E D-->E F(沟通管理计划) E-->F E-->Z G[管理沟通] F-->G H(项目沟通) G-->H I(问题日志) J[控制沟通] H-->J I-->J K(工作绩效信息) J-->K Z(项目文件的更新) class E,G,J PROCESS; class A,F,H,I,K INNER Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-10 15:12:02 "},"Project-management-knowledge/input-ouput-stream.html":{"url":"Project-management-knowledge/input-ouput-stream.html","title":"输入输出流","keywords":"","body":"输入输出流 Copyright © 曾大海 2019 all right reserved，powered by Gitbook该文件修订时间： 2019-09-05 10:18:21 "}}